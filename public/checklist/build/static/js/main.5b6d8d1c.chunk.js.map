{"version":3,"sources":["utils/storage.js","utils/sort.js","components/Sort.jsx","components/Search.jsx","utils/date.js","utils/filter.js","components/Filters.jsx","components/Menu.jsx","utils/search.js","components/Calendar.jsx","utils/avatarProps.js","components/StyledBadge.jsx","components/Avatar.jsx","components/Creature.jsx","components/Creatures.jsx","App.js","serviceWorker.js","index.js"],"names":["sortKey","getKeyString","key","type","getSaveData","localStorage","window","storageKey","JSON","parse","getItem","setSaveData","data","setItem","stringify","BY","ORDER","sortByNumberProp","prop","creatures","order","reverse","sort","a","b","creatureA","creatureB","alphabeticalSort","toUpperCase","comparison","sortByStringProp","sortCreatures","by","critterpediaSort","priceSort","defaultSort","useStyles","makeStyles","theme","root","formControl","margin","spacing","width","paddingLeft","paddingRight","Sort","props","classes","currentSort","onChangeSort","FormControl","className","Select","labelId","id","value","onChange","e","newSort","target","MenuItem","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","breakpoints","up","searchIcon","padding","height","pointerEvents","display","alignItems","justifyContent","clearIcon","color","inputRoot","inputInput","transition","transitions","create","Search","onChangeSearch","React","useState","state","setState","InputBase","placeholder","input","inputProps","newSearch","endAdornment","InputAdornment","IconButton","aria-label","onClick","getCurrentMonth","Date","getMonth","isActive","activeMonths","currentMonth","includes","FILTERS","ACTIVE","filterCreatures","filters","filteredCreatures","filter","creature","northernMonths","Filters","currentFilters","onChangeFilters","handleChange","newFilters","Chips","Object","keys","map","selected","Chip","icon","label","onDelete","appBar","background","flexGrow","list","menuTitle","textAlign","title","toolbar","Menu","open","onUpdatePage","pageName","toggleDrawer","event","handleUpdatePage","page","MenuList","role","List","Typography","variant","Divider","ListItem","button","ListItemIcon","ListItemText","primary","Drawer","anchor","onClose","AppBar","Toolbar","edge","searchCreatures","isInName","name","toLowerCase","isInLocation","location","month","inactive","current","outline","outlineOffset","Calendar","Grid","container","active","classNames","item","Paper","square","sizes","anchovy","angelfish","arapaima","arowana","barreleye","betta","bitterling","blowfish","bluegill","carp","catfish","char","coelacanth","crawfish","dab","dace","dorado","frog","gar","goldfish","guppy","killifish","koi","loach","napoleonfish","oarfish","pike","piranha","rainbowfish","ray","salmon","squid","stringfish","sturgeon","suckerfish","surgeonfish","sweetfish","tadpole","tilapia","tuna","default","withStyles","badge","boxShadow","paper","top","left","animation","border","content","transform","opacity","Badge","avatar","needSpace","marginRight","confetti","Avatar","seen","image","replace","info","getAvatarProps","confettiConfig","colors","spread","startVelocity","elementCount","stagger","avatarClasses","AvatarBase","imgProps","style","alt","src","config","StyledBadge","overlap","anchorOrigin","vertical","horizontal","overflow","marginTop","incomplete","complete","partial","defaultSaveData","isDonated","isHoarded","Creature","index","price","size","time","priceString","toString","isLoading","useEffect","saveData","toggleAccumulation","Card","CardContent","cols","justify","CardActions","FormGroup","row","FormControlLabel","control","Checkbox","data-id","checked","fontSize","Creatures","setCreatures","setIsLoading","fetch","response","json","newCreatures","fetchCreatures","CircularProgress","CreatureList","itemsPerRow","monthRegion","trueIndex","rowData","slice","direction","Math","floor","itemCount","ceil","length","itemData","itemSize","overflowX","App","newPage","CssBaseline","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5b6d8d1c.chunk.js","sourcesContent":["const creatureKey = type => `greg-acnh-${type}`;\r\nexport const sortKey = 'greg-acnh-sort';\r\n\r\nconst getKeyString = (key) => {\r\n  return key.key ? key.key : creatureKey(key.type);\r\n};\r\n\r\n// key = { creatureType, key }\r\nexport function getSaveData(key) {\r\n  const localStorage = window && window.localStorage;\r\n  const storageKey = getKeyString(key);\r\n  if (localStorage) {\r\n    return JSON.parse(localStorage.getItem(storageKey)) || {};\r\n  }\r\n  // No LocalStorage, so nothing will work\r\n  return {};\r\n};\r\n\r\nexport function setSaveData(key, data) {\r\n  const localStorage = window && window.localStorage;\r\n  const storageKey = getKeyString(key);\r\n  if (localStorage) {\r\n    localStorage.setItem(storageKey,  JSON.stringify(data));\r\n  }\r\n};\r\n\r\nexport function mergeSavedCreatureData(creatures, type) {\r\n  const savedData = getSaveData({ type });\r\n  creatures.forEach((creature, i) => {\r\n    const savedInfo = savedData[creature.index];\r\n    if (savedInfo) {\r\n      creature.isDonated = !!(savedInfo.isDonated);\r\n      creature.isHoarded = !!(savedInfo.isHoarded);\r\n    } else {\r\n      creature.isDonated = false;\r\n      creature.isHoarded = false;\r\n    }\r\n\r\n  });\r\n\r\n  console.log(creatures);\r\n  return creatures;\r\n}\r\n","import { sortKey, getSaveData, setSaveData } from './storage';\r\n\r\nexport const BY = {\r\n  CRITTERPEDIA: 'Criterpedia Order',\r\n  ALPHABETICAL: 'Alphabetical',\r\n  PRICE: 'Price',\r\n};\r\n\r\nexport const ORDER = {\r\n  ASC: 'Ascending',\r\n  DESC: 'Descending',\r\n};\r\n\r\nconst sortByStringProp = (prop, creatures, order) => {\r\n  const reverse = order === ORDER.DESC;\r\n  return creatures.sort((a, b) => {\r\n    // Use toUpperCase() to ignore character casing\r\n    const creatureA = a[prop].toUpperCase();\r\n    const creatureB = b[prop].toUpperCase();\r\n\r\n    let comparison = 0;\r\n    if (creatureA > creatureB) {\r\n      comparison = reverse ? 1: -1;\r\n    } else if (creatureA < creatureB) {\r\n      comparison = reverse ? -1 : 1;\r\n    }\r\n    return comparison;\r\n  });\r\n};\r\n\r\nconst sortByNumberProp = (prop, creatures, order) => {\r\n  const reverse = order === ORDER.DESC;\r\n  return creatures.sort((a, b) => {\r\n    const creatureA = a[prop];\r\n    const creatureB = b[prop];\r\n    if (creatureA === '?') {\r\n      return 1;\r\n    }\r\n\r\n    if (creatureB === '?') {\r\n      return -1;\r\n    }\r\n\r\n    return reverse ? creatureB - creatureA : creatureA - creatureB;\r\n  });\r\n};\r\n\r\nconst alphabeticalSort = (creatures, order) => {\r\n  return sortByStringProp('name', creatures, order);\r\n};\r\n\r\nconst critterpediaSort = (creatures, order) => {\r\n  return sortByNumberProp('index', creatures, order);\r\n};\r\n\r\nconst priceSort = (creatures, order) => {\r\n  return sortByNumberProp('price', creatures, order);\r\n};\r\n\r\nexport function sortCreatures(creatures, sort) {\r\n  switch (sort.by) {\r\n    case BY.ALPHABETICAL:\r\n      return alphabeticalSort(creatures, sort.order);\r\n    case BY.CRITTERPEDIA:\r\n      return critterpediaSort(creatures, sort.order);\r\n    case BY.PRICE:\r\n      return priceSort(creatures, sort.order);\r\n    default:\r\n      return creatures;\r\n  }\r\n};\r\n\r\nexport function defaultSort() {\r\n  const sort = getSaveData({ key: sortKey });\r\n  if (!sort.by || !sort.order) {\r\n    const newSort = { by: BY.CRITTERPEDIA, order: ORDER.DESC };\r\n    setSaveData({ key: sortKey }, newSort);\r\n  }\r\n  return sort;\r\n};\r\n","import React from 'react';\r\nimport {\r\n  FormControl,\r\n  Select,\r\n  MenuItem,\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { BY, ORDER } from '../utils/sort';\r\nimport { sortKey, setSaveData } from '../utils/storage';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    width: '100%',\r\n    paddingLeft: 16,\r\n    paddingRight: 24,\r\n  },\r\n}));\r\n\r\nexport default function Sort(props) {\r\n  const classes = useStyles();\r\n  const { currentSort, onChangeSort } = props;\r\n\r\n  const onChangeSortBy = (e) => {\r\n    const newSort = { ...currentSort, by: e.target.value }\r\n    setSaveData({ key: sortKey }, newSort);\r\n    onChangeSort(newSort);\r\n  };\r\n\r\n  const onChangeSortOrder = (e) => {\r\n    const newSort = { ...currentSort, order: e.target.value }\r\n    setSaveData({ key: sortKey }, newSort);\r\n    onChangeSort(newSort);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <FormControl className={classes.formControl}>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={currentSort.by}\r\n          onChange={onChangeSortBy}\r\n        >\r\n          <MenuItem value={BY.ALPHABETICAL}>{BY.ALPHABETICAL}</MenuItem>\r\n          <MenuItem value={BY.CRITTERPEDIA}>{BY.CRITTERPEDIA}</MenuItem>\r\n          <MenuItem value={BY.PRICE}>{BY.PRICE}</MenuItem>\r\n        </Select>\r\n        </FormControl>\r\n          <FormControl className={classes.formControl}>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={currentSort.order}\r\n          onChange={onChangeSortOrder}\r\n        >\r\n          <MenuItem value={ORDER.DESC}>{ORDER.DESC}</MenuItem>\r\n          <MenuItem value={ORDER.ASC}>{ORDER.ASC}</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {\r\n  IconButton,\r\n  InputAdornment,\r\n  InputBase,\r\n} from '@material-ui/core';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  clearIcon: {\r\n    color: theme.palette.common.white,\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '12ch',\r\n      '&:focus': {\r\n        width: '20ch',\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Search(props) {\r\n  const classes = useStyles();\r\n  const { onChangeSearch } = props;\r\n  const [state, setState] = React.useState({ search: '' });\r\n  const { search } = state;\r\n\r\n  const handleChange = (e) => {\r\n    const newSearch = e.target.value;\r\n    setState({ search: newSearch });\r\n    onChangeSearch(newSearch);\r\n  }\r\n\r\n  const handleClear = () => {\r\n    const newSearch = '';\r\n    setState({ search: newSearch });\r\n    onChangeSearch(newSearch);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.search}>\r\n      <div className={classes.searchIcon}>\r\n        <SearchIcon />\r\n      </div>\r\n      <InputBase\r\n        placeholder=\"Search…\"\r\n        classes={{\r\n          root: classes.inputRoot,\r\n          input: classes.inputInput,\r\n        }}\r\n        inputProps={{ 'aria-label': 'search' }}\r\n        onChange={handleChange}\r\n        value={search}\r\n        endAdornment={\r\n          <InputAdornment position=\"end\">\r\n            <IconButton\r\n              aria-label=\"clear\"\r\n              onClick={handleClear}\r\n              className={classes.clearIcon}\r\n            >\r\n              <ClearIcon />\r\n            </IconButton>\r\n          </InputAdornment>\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","export function getCurrentMonth() {\r\n  const today = new Date();\r\n  return today.getMonth() + 1;\r\n};\r\n\r\nexport function isActive (activeMonths) {\r\n  const currentMonth = getCurrentMonth()\r\n  return activeMonths.includes(currentMonth);\r\n};\r\n","import { isActive } from './date';\r\nexport const FILTERS = {\r\n  ACTIVE: 'active',\r\n};\r\n\r\nexport function filterCreatures(creatures, filters) {\r\n  if (!filters) {\r\n    return creatures;\r\n  }\r\n\r\n  let filteredCreatures = creatures;\r\n  if (filters.includes(FILTERS.ACTIVE)) {\r\n    filteredCreatures = creatures.filter((creature) => {\r\n      return isActive(creature.northernMonths);\r\n    });\r\n  }\r\n\r\n  return filteredCreatures;\r\n};\r\n","import React from 'react';\r\nimport {\r\n  Chip,\r\n} from '@material-ui/core';\r\nimport AlarmOnIcon from '@material-ui/icons/AlarmOn';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { FILTERS } from '../utils/filter';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: 10,\r\n  },\r\n}));\r\n\r\nexport default function Filters(props) {\r\n  const classes = useStyles();\r\n  const { currentFilters, onChangeFilters } = props;\r\n  // const [state, setState] = React.useState({ filters: [] });\r\n  // const { search } = state;\r\n\r\n  const handleChange = (filter) => {\r\n    const newFilters = currentFilters.includes(filter) ? [] : [FILTERS.ACTIVE];\r\n    onChangeFilters(newFilters);\r\n  }\r\n\r\n  const Chips = Object.keys(FILTERS).map((filter) => {\r\n    const selected = currentFilters.includes(FILTERS[filter]);\r\n    switch (FILTERS[filter]) {\r\n      case FILTERS.ACTIVE:\r\n        return <Chip\r\n          color={selected ? 'primary' : 'default'}\r\n          icon={<AlarmOnIcon />}\r\n          label=\"Active!\"\r\n          onClick={(e) => handleChange(FILTERS.ACTIVE)}\r\n          key={FILTERS.ACTIVE}\r\n          onDelete={selected ? () => handleChange(FILTERS.ACTIVE) : null}\r\n        />;\r\n      default:\r\n        return null;\r\n    }\r\n  })\r\n  return <div className={classes.root}>{Chips}</div>;\r\n}\r\n","import React from 'react';\r\nimport {\r\n  AppBar,\r\n  Divider,\r\n  Drawer,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  IconButton,\r\n  Toolbar,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Sort from './Sort';\r\nimport Search from './Search';\r\nimport Filters from './Filters';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    background: 'repeating-linear-gradient(45deg, #333333 0, #333333 5%, #4f4f4f 0, #4f4f4f 50%) 0 / 10px 10px',\r\n    flexGrow: 1,\r\n  },\r\n  list: {\r\n    width: 250,\r\n  },\r\n  menuTitle: {\r\n    textAlign: 'center',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n    textAlign: 'left',\r\n  },\r\n  toolbar: {\r\n    backgroundColor: '#f0f0f0',\r\n    // display: 'flex',\r\n    // marginLeft: 'auto',\r\n    height: 50\r\n  },\r\n}));\r\n\r\nfunction Menu(props) {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({ open: false });\r\n  const { onUpdatePage, onChangeFilters, onChangeSearch, onChangeSort, pageName, filters, sort } = props;\r\n  const toggleDrawer = (open) => event => {\r\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, open });\r\n  };\r\n\r\n  const handleUpdatePage = (page) => {\r\n    onUpdatePage(page);\r\n    setState({ ...state, open: false });\r\n  }\r\n\r\n  const MenuList = (\r\n    <div\r\n      className={classes.list}\r\n      role=\"presentation\"\r\n    >\r\n      <List>\r\n        <Typography variant=\"h6\" className={classes.menuTitle}>\r\n          Page\r\n        </Typography>\r\n        <Divider />\r\n        <ListItem button key=\"Fish\" onClick={() => handleUpdatePage('Fish')}>\r\n          <ListItemIcon>{<MenuIcon />}</ListItemIcon>\r\n          <ListItemText primary=\"Fish\" />\r\n        </ListItem>\r\n        <ListItem button key=\"Bugs\" onClick={() => handleUpdatePage('Bugs')}>\r\n          <ListItemIcon>{<MenuIcon />}</ListItemIcon>\r\n          <ListItemText primary=\"Bugs\" />\r\n        </ListItem>\r\n\r\n        <Typography variant=\"h6\" className={classes.menuTitle}>\r\n          Sort\r\n        </Typography>\r\n        <Divider />\r\n        <Sort currentSort={sort} onChangeSort={onChangeSort} />\r\n\r\n        <Typography variant=\"h6\" className={classes.menuTitle}>\r\n          Filters\r\n        </Typography>\r\n        <Divider />\r\n        <Filters currentFilters={filters} onChangeFilters={onChangeFilters} />\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Drawer anchor=\"left\" open={state.open} onClose={toggleDrawer(false)}>\r\n        {MenuList}\r\n      </Drawer>\r\n      <AppBar className={classes.appBar} position=\"sticky\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={toggleDrawer(true)}>\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            {pageName}\r\n          </Typography>\r\n\r\n          <Search onChangeSearch={onChangeSearch} />\r\n\r\n\r\n        </Toolbar>\r\n      </AppBar>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Menu;\r\n","export function searchCreatures(creatures, search) {\r\n  if (!search) {\r\n    return creatures;\r\n  }\r\n\r\n  return creatures.filter((creature) => {\r\n    const isInName = creature.name ?\r\n      creature.name.toLowerCase().includes(search.toLowerCase()) : false;\r\n    const isInLocation = creature.location ?\r\n      creature.location.toLowerCase().includes(search.toLowerCase()) : false;\r\n    return isInName || isInLocation;\r\n  });\r\n}\r\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Grid,\n  Paper,\n} from '@material-ui/core';\nimport { getCurrentMonth } from '../utils/date';\n\nconst useStyles = makeStyles({\n  root: {\n    width: 120,\n  },\n  month: {\n    width: 30,\n    height:20,\n  },\n  inactive: {\n    backgroundColor: '#949494',\n  },\n  current: {\n    outline: '2px solid #444',\n    outlineOffset: -2\n  }\n});\n\nexport default function Calendar(props) {\n  const { activeMonths } = props;\n  const classes = useStyles();\n\n  return (\n    <Grid container className={classes.root} spacing={0}>\n      {[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12].map(value => {\n        const active = activeMonths.includes(value);\n        const current = value === getCurrentMonth();\n        let classNames = classes.month;\n        classNames = active ? classes.month : `${classes.month} ${classes.inactive}`;\n        classNames = current ? `${classNames} ${classes.current}` : classNames;\n        return (\n          <Grid key={value} item>\n            <Paper className={classNames} square>\n              {value}\n            </Paper>\n          </Grid>\n        );\n      })}\n    </Grid>\n  );\n}\n","export function getAvatarProps(name, type, seen) {\r\n  const image = seen ? `../images/${type}/${name.toLowerCase().replace(/\\s/g, '')}.png` : null;\r\n  const info = props[name.toLowerCase()] || props.default;\r\n  const color = seen ? info.color : props.default.color;\r\n  const height = seen ? info.height : props.default.height;\r\n  const width = seen ? info.width : props.default.width;\r\n  return { image, color, height, width };\r\n}\r\n\r\nconst sizes = {\r\n  100: {\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  115: {\r\n    width: '115%',\r\n    height: '115%',\r\n  },\r\n  125: {\r\n    width: '125%',\r\n    height: '125%',\r\n  },\r\n  150: {\r\n    width: '150%',\r\n    height: '150%',\r\n  },\r\n  200: {\r\n    width: '200%',\r\n    height: '200%',\r\n  },\r\n};\r\n\r\nconst props = {\r\n  anchovy: {\r\n    color: '#a8ebff',\r\n    ...sizes[100],\r\n  },\r\n  angelfish: {\r\n    color: '#aeae8d',\r\n    ...sizes[150],\r\n  },\r\n  arapaima: {\r\n    color: '#4a7342',\r\n    ...sizes[100],\r\n  },\r\n  arowana: {\r\n    color: '#fac900',\r\n    ...sizes[125],\r\n  },\r\n  'barred knifejaw': {\r\n    color: '#5a5a62',\r\n    ...sizes[125],\r\n  },\r\n  barreleye: {\r\n    color: '#78d3b6',\r\n    ...sizes[100],\r\n  },\r\n  betta: {\r\n    color: '#b4c0f7',\r\n    ...sizes[100],\r\n  },\r\n  bitterling: {\r\n    color: '#f29dd0',\r\n    ...sizes[150],\r\n  },\r\n  'black bass': {\r\n    color: '#588a0e',\r\n    ...sizes[125],\r\n  },\r\n  blowfish: {\r\n    color: '#c8d0d8',\r\n    ...sizes[125],\r\n  },\r\n  'blue marlin': {\r\n    color: '#326a6e',\r\n    ...sizes[100],\r\n  },\r\n  bluegill: {\r\n    color: '#5e6fa2',\r\n    ...sizes[125],\r\n  },\r\n  'butterfly fish': {\r\n    color: '#fcd109',\r\n    ...sizes[150],\r\n  },\r\n  carp: {\r\n    color: '#bd9b35',\r\n    ...sizes[125],\r\n  },\r\n  catfish: {\r\n    color: '#808068',\r\n    ...sizes[125],\r\n  },\r\n  char: {\r\n    color: '#b7ae96',\r\n    ...sizes[125],\r\n  },\r\n  'cherry salmon': {\r\n    color: '#b2a1a1',\r\n    ...sizes[125],\r\n  },\r\n  'clown fish': {\r\n    color: '#d44c00',\r\n    ...sizes[150],\r\n  },\r\n  coelacanth: {\r\n    color: '#5a6b6b',\r\n    ...sizes[125],\r\n  },\r\n  crawfish: {\r\n    color: '#d8610c',\r\n    ...sizes[125],\r\n  },\r\n  'crucian carp': {\r\n    color: '#8f8f6d',\r\n    ...sizes[125],\r\n  },\r\n  dab: {\r\n    color: '#634208',\r\n    ...sizes[125],\r\n  },\r\n  dace: {\r\n    color: '#f09b35',\r\n    ...sizes[125],\r\n  },\r\n  dorado: {\r\n    color: '#faff50',\r\n    ...sizes[115],\r\n  },\r\n  'football fish': {\r\n    color: '#623994',\r\n    ...sizes[100],\r\n  },\r\n  'freshwater goby': {\r\n    color: '#b7af5d',\r\n    ...sizes[125],\r\n  },\r\n  frog: {\r\n    color: '#9ac416',\r\n    ...sizes[125],\r\n  },\r\n  gar: {\r\n    color: '#e6cd83',\r\n    ...sizes[125],\r\n  },\r\n  'giant snakehead': {\r\n    color: '#6b6b39',\r\n    ...sizes[125],\r\n  },\r\n  'giant trevally': {\r\n    color: '#a8d1d1',\r\n    ...sizes[115],\r\n  },\r\n  'golden trout': {\r\n    color: '#c9672f',\r\n    ...sizes[100],\r\n  },\r\n  goldfish: {\r\n    color: '#c1241c',\r\n    ...sizes[150],\r\n  },\r\n  'great white shark': {\r\n    color: '#38618a',\r\n    ...sizes[115],\r\n  },\r\n  guppy: {\r\n    color: '#7c275a',\r\n    ...sizes[150],\r\n  },\r\n  'hammerhead shark': {\r\n    color: '#aa7036',\r\n    ...sizes[115],\r\n  },\r\n  'horse mackerel': {\r\n    color: '#ffff02',\r\n    ...sizes[150],\r\n  },\r\n  killifish: {\r\n    color: '#c0d8c0',\r\n    ...sizes[150],\r\n  },\r\n  'king salmon': {\r\n    color: '#c9e2ea',\r\n    ...sizes[125],\r\n  },\r\n  koi: {\r\n    color: '#d75321',\r\n    ...sizes[125],\r\n  },\r\n  loach: {\r\n    color: '#d1c08d',\r\n    ...sizes[125],\r\n  },\r\n  'mahi-mahi': {\r\n    color: '#4ad699',\r\n    ...sizes[100],\r\n  },\r\n  'mitten crab': {\r\n    color: '#cbaa79',\r\n    ...sizes[125],\r\n  },\r\n  'moray eel': {\r\n    color: '#e9bf02',\r\n    ...sizes[125],\r\n  },\r\n  napoleonfish: {\r\n    color: '#78ebf4',\r\n    ...sizes[125],\r\n  },\r\n  'neon tetra': {\r\n    color: '#f64c4c',\r\n    ...sizes[150],\r\n  },\r\n  'nibble fish': {\r\n    color: '#e7dfa5',\r\n    ...sizes[150],\r\n  },\r\n  oarfish: {\r\n    color: '#d7efef',\r\n    ...sizes[125],\r\n  },\r\n  'ocean sunfish': {\r\n    color: '#a5e9e9',\r\n    ...sizes[125],\r\n  },\r\n  'olive flounder': {\r\n    color: '#c68421',\r\n    ...sizes[125],\r\n  },\r\n  'pale chub': {\r\n    color: '#90e5ff',\r\n    ...sizes[125],\r\n  },\r\n  'puffer fish': {\r\n    color: '#c4cce5',\r\n    ...sizes[125],\r\n  },\r\n  pike: {\r\n    color: '#c4d5a2',\r\n    ...sizes[125],\r\n  },\r\n  piranha: {\r\n    color: '#ccdd33',\r\n    ...sizes[150],\r\n  },\r\n  'pond smelt': {\r\n    color: '#cec65a',\r\n    ...sizes[125],\r\n  },\r\n  'pop-eyed goldfish': {\r\n    color: '#949472',\r\n    ...sizes[150],\r\n  },\r\n  rainbowfish: {\r\n    color: '#e3e3b5',\r\n    ...sizes[100],\r\n  },\r\n  'ranchu goldfish': {\r\n    color: '#dfb576',\r\n    ...sizes[100],\r\n  },\r\n  ray: {\r\n    color: '#f5d318',\r\n    ...sizes[125],\r\n  },\r\n  'red snapper': {\r\n    color: '#f8be9d',\r\n    ...sizes[125],\r\n  },\r\n  'ribbon eel': {\r\n    color: '#e5e5c3',\r\n    ...sizes[125],\r\n  },\r\n  'saddled bichir': {\r\n    color: '#d5b391',\r\n    ...sizes[125],\r\n  },\r\n  salmon: {\r\n    color: '#d15e66',\r\n    ...sizes[125],\r\n  },\r\n  'saw shark': {\r\n    color: '#deab9a',\r\n    ...sizes[125],\r\n  },\r\n  'sea bass': {\r\n    color: '#b2d46e',\r\n    ...sizes[125],\r\n  },\r\n  'sea butterfly': {\r\n    color: '#ffe52a',\r\n    ...sizes[150],\r\n  },\r\n  'sea horse': {\r\n    color: '#e7746b',\r\n    ...sizes[150],\r\n  },\r\n  'snapping turtle': {\r\n    color: '#c19c66',\r\n    ...sizes[100],\r\n  },\r\n  'soft-shelled turtle': {\r\n    color: '#e9e983',\r\n    ...sizes[125],\r\n  },\r\n  squid: {\r\n    color: '#d3ba88',\r\n    ...sizes[125],\r\n  },\r\n  stringfish: {\r\n    color: '#d8d8b6',\r\n    ...sizes[125],\r\n  },\r\n  sturgeon: {\r\n    color: '#c9bcb5',\r\n    ...sizes[100],\r\n  },\r\n  suckerfish: {\r\n    color: '#c2bfc4',\r\n    ...sizes[100],\r\n  },\r\n  surgeonfish: {\r\n    color: '#99ee99',\r\n    ...sizes[150],\r\n  },\r\n  sweetfish: {\r\n    color: '#e6f709',\r\n    ...sizes[125],\r\n  },\r\n  tadpole: {\r\n    color: '#d8d8c7',\r\n    ...sizes[150],\r\n  },\r\n  tilapia: {\r\n    color: '#b584c2',\r\n    ...sizes[100],\r\n  },\r\n  tuna: {\r\n    color: '#cba900',\r\n    ...sizes[125],\r\n  },\r\n  'whale shark': {\r\n    color: '#cdbcab',\r\n    ...sizes[125],\r\n  },\r\n  'yellow perch': {\r\n    color: '#90e56e',\r\n    ...sizes[125],\r\n  },\r\n  'zebra turkeyfish': {\r\n    color: '#dd9966',\r\n    ...sizes[125],\r\n  },\r\n  default: {\r\n    color: '#bdbdbd',\r\n    ...sizes[100],\r\n  },\r\n};\r\n","import { withStyles } from '@material-ui/core/styles';\r\nimport {\r\n  Badge,\r\n} from '@material-ui/core';\r\n\r\nexport default withStyles(theme => {\r\n  return ({\r\n    badge: {\r\n      backgroundColor: '#44b700',\r\n      color: '#44b700',\r\n      boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n      '&::after': {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        width: '100%',\r\n        height: '100%',\r\n        borderRadius: '50%',\r\n        animation: '$ripple 1.2s infinite ease-in-out',\r\n        border: '1px solid currentColor',\r\n        content: '\"\"',\r\n      },\r\n    },\r\n    '@keyframes ripple': {\r\n      '0%': {\r\n        transform: 'scale(.8)',\r\n        opacity: 1,\r\n      },\r\n      '100%': {\r\n        transform: 'scale(2.4)',\r\n        opacity: 0,\r\n      },\r\n    },\r\n  });\r\n})(Badge);\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  Avatar as AvatarUI,\r\n} from '@material-ui/core';\r\nimport Confetti from 'react-dom-confetti';\r\nimport { getAvatarProps } from '../utils/avatarProps'\r\nimport StyledBadge from './StyledBadge';\r\n\r\nconst useStyles = makeStyles({\r\n  avatar: {\r\n    backgroundColor: props => props.color,\r\n  },\r\n  needSpace: {\r\n    marginRight: 10,\r\n  },\r\n  confetti: {\r\n    left: 5,\r\n    top: -20,\r\n    position: 'relative',\r\n  },\r\n});\r\n\r\nexport default function Avatar(props) {\r\n  const { active, name, seen, type } = props;\r\n  const { color, image, width, height } = getAvatarProps(name, type, seen);\r\n  const classes = useStyles({ color });\r\n  const confettiConfig = {\r\n    colors: [color],\r\n    spread: 360,\r\n    startVelocity: 25,\r\n    elementCount: 50,\r\n    stagger: 10,\r\n  }\r\n\r\n\r\n  let avatarClasses = classes.avatar;\r\n  avatarClasses = active ? avatarClasses : `${avatarClasses} ${classes.needSpace}`\r\n  const AvatarBase = (\r\n    <div>\r\n    <AvatarUI\r\n      className={avatarClasses}\r\n      imgProps={{style: {'width':`${width}`,'height':`${height}`}}}\r\n      alt={name}\r\n      src={image}\r\n    />\r\n    <Confetti className={classes.confetti} active={ seen } config={confettiConfig} />\r\n    </div>\r\n  );\r\n\r\n  if (active) {\r\n    return (\r\n      <StyledBadge\r\n        overlap=\"circle\"\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'right',\r\n        }}\r\n        variant=\"dot\"\r\n        className={classes.needSpace}\r\n      >\r\n        {AvatarBase}\r\n      </StyledBadge>\r\n    );\r\n  }\r\n\r\n  return AvatarBase;\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AlarmOnIcon from '@material-ui/icons/AlarmOn';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport MoneyIcon from '@material-ui/icons/MonetizationOnTwoTone';\r\nimport RoomIcon from '@material-ui/icons/RoomTwoTone';\r\nimport SizeIcon from '@material-ui/icons/HeightTwoTone';\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Checkbox,\r\n  Chip,\r\n  Divider,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  Grid,\r\n} from '@material-ui/core';\r\nimport { getSaveData, setSaveData } from '../utils/storage';\r\nimport { isActive } from '../utils/date';\r\nimport Calendar from './Calendar';\r\nimport Avatar from './Avatar';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: 350,\r\n    padding: 0,\r\n    overflow: 'visible',\r\n  },\r\n  title: {\r\n    marginTop: 0,\r\n  },\r\n  incomplete: {\r\n    backgroundColor: '#f0f0f0',\r\n    transition: 'background-color .2s ease',\r\n  },\r\n  complete: {\r\n    backgroundColor: '#d8f2a0',\r\n    transition: 'background-color .5s ease',\r\n  },\r\n  partial: {\r\n    backgroundColor: '#f7f1df',\r\n    transition: 'background-color .5s ease',\r\n  }\r\n});\r\n\r\nconst defaultSaveData = {\r\n  isDonated: false,\r\n  isHoarded: false,\r\n}\r\n\r\nconst formatPrice = (num) => {\r\n  return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\r\n}\r\n\r\nexport default function Creature(props) {\r\n\r\n  const classes = useStyles();\r\n  const {\r\n    activeMonths,\r\n    index,\r\n    location,\r\n    name,\r\n    price,\r\n    size,\r\n    time,\r\n    type,\r\n  } = props;\r\n  const priceString = formatPrice(price);\r\n  const [state, setState] = useState({\r\n    ...defaultSaveData,\r\n    isLoading: true,\r\n  });\r\n  const { isDonated, isHoarded, isLoading } = state;\r\n\r\n  useEffect(() => {\r\n    const saveData = getSaveData({ type });\r\n    setState({ ...defaultSaveData, ...saveData[index], isLoading: false });\r\n  }, [index, type]);\r\n\r\n  const active = isActive(activeMonths);\r\n  const complete = isDonated && isHoarded;\r\n  const seen = isDonated || isHoarded;\r\n\r\n  const toggleAccumulation = (e) => {\r\n    const prop = e.target.name;\r\n    const saveData = getSaveData({ type });\r\n    if (saveData[index]) {\r\n      saveData[index][prop] = !saveData[index][prop];\r\n    } else {\r\n      saveData[index] = {}\r\n      saveData[index][prop] = true;\r\n    }\r\n    setSaveData({ type }, saveData);\r\n    setState({...defaultSaveData, ...saveData[index], isLoading: false});\r\n  }\r\n\r\n  if (isLoading) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div style={{display: 'flex'}}>\r\n            <Avatar active={active} name={name} seen={seen} type={type} />\r\n            <h3 className={classes.title}>{name}</h3>\r\n            <div style={{'marginLeft': 'auto'}}>\r\n              {active && <Chip color=\"secondary\" icon={<AlarmOnIcon />} label={\"Active!\"}/>}\r\n            </div>\r\n          </div>\r\n          <Divider variant=\"inset\" />\r\n          <div style={{display: 'flex', justifyContent: 'flex-end', padding:5, marginTop: 5}}>\r\n            <Chip style={{marginLeft: 5}} icon={<MoneyIcon />} label={priceString}/>\r\n            <Chip style={{marginLeft: 5}} icon={<RoomIcon />} label={location}/>\r\n            {size && <Chip style={{marginLeft: 5}} icon={<SizeIcon />} label={size}/>}\r\n          </div>\r\n\r\n          <Grid container cols={2} spacing={2} justify=\"center\" style={{'marginTop': '10px'}}>\r\n            <Grid item container justify=\"center\">\r\n              <span>{time}</span>\r\n            </Grid>\r\n            <Grid item container justify=\"center\">\r\n              <Calendar activeMonths={activeMonths} />\r\n            </Grid>\r\n          </Grid>\r\n\r\n        </CardContent>\r\n        <CardActions className={complete ? classes.complete : (seen ? classes.partial : classes.incomplete)}>\r\n          <FormGroup row>\r\n            <FormControlLabel\r\n              control={<Checkbox\r\n                data-id={index}\r\n                checked={isDonated}\r\n                color=\"primary\"\r\n                onChange={toggleAccumulation}\r\n                name=\"isDonated\"\r\n              />}\r\n              label=\"Donated\"\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox\r\n                data-id={index}\r\n                checked={isHoarded}\r\n                color=\"primary\"\r\n                onChange={toggleAccumulation}\r\n                name=\"isHoarded\"\r\n              />}\r\n              label=\"Hoarded\"\r\n            />\r\n          </FormGroup>\r\n          {complete && <CheckIcon style={{'marginLeft': 'auto'}} fontSize=\"large\"/>}\r\n        </CardActions>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  CircularProgress,\r\n  Grid,\r\n} from '@material-ui/core';\r\nimport { sortCreatures } from '../utils/sort';\r\nimport { searchCreatures } from '../utils/search';\r\nimport { filterCreatures } from '../utils/filter';\r\nimport Creature from './Creature';\r\nimport { FixedSizeList } from 'react-window';\r\nimport AutoSizer from 'react-virtualized-auto-sizer';\r\n\r\nexport default function Creatures(props) {\r\n\r\n  const { type, search, sort, filters } = props;\r\n  const [creatures, setCreatures] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true)\r\n  }, [sort, search, filters]);\r\n\r\n  useEffect(() => {\r\n    async function fetchCreatures() {\r\n      const response = await fetch(`/api/${type}`);\r\n      let newCreatures = await response.json();\r\n      newCreatures = sortCreatures(newCreatures, sort);\r\n      newCreatures = searchCreatures(newCreatures, search);\r\n      newCreatures = filterCreatures(newCreatures, filters);\r\n      setCreatures(newCreatures);\r\n      setIsLoading(false)\r\n    }\r\n    fetchCreatures();\r\n  }, [type, sort, search, filters]);\r\n\r\n\r\n  if (isLoading) {\r\n    return <CircularProgress variant=\"query\" style={{ margin: 100 }}/>;\r\n  }\r\n\r\n  function CreatureList(props) {\r\n    const { data: { itemsPerRow, monthRegion }, index, style } = props;\r\n    const trueIndex = index * itemsPerRow;\r\n    const padding = index === 0 ? { marginTop: 40 } : {};\r\n    const rowData = creatures.slice(trueIndex, trueIndex + itemsPerRow).map((creature) =>\r\n      <Grid item key={creature.index} style={padding}>\r\n        <Creature {...creature} type={type} activeMonths={creature[monthRegion]} />\r\n      </Grid>\r\n    );\r\n\r\n    return (\r\n      <div style={style}>\r\n        <Grid container\r\n              direction=\"row\"\r\n              justify=\"center\"\r\n              alignItems=\"center\"\r\n              spacing={10}\r\n        >\r\n          {rowData}\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n  return (\r\n    <AutoSizer>\r\n      {({ height, width }) => {\r\n        const itemWidth = 430;\r\n        let itemsPerRow = Math.floor(width / itemWidth) || 1;\r\n        itemsPerRow = itemsPerRow > 3 ? 3 : itemsPerRow;\r\n        const itemCount = Math.ceil(creatures.length / itemsPerRow);\r\n        const monthRegion = 'northernMonths';\r\n        return (\r\n          <FixedSizeList\r\n            itemData={{ itemsPerRow, monthRegion }}\r\n            height={height - 64}\r\n            width={width}\r\n            itemSize={350}\r\n            itemCount={itemCount}\r\n            style={{overflowX: 'hidden'}}\r\n          >\r\n            {CreatureList}\r\n          </FixedSizeList>\r\n        );\r\n      }}\r\n    </AutoSizer>\r\n  );\r\n}\r\n","import React from 'react';\nimport {\n  CssBaseline,\n} from '@material-ui/core';\nimport Menu from './components/Menu';\nimport './App.css';\nimport Creatures from './components/Creatures';\nimport { defaultSort } from './utils/sort';\n\nfunction App() {\n  const [state, setState] = React.useState({\n    filters: [],\n    search: '',\n    sort: defaultSort(),\n    pageName: 'Fish'\n  });\n  const { filters, search, sort, pageName } = state;\n  const onUpdatePage = (newPage) => {\n      setState({ ...state, pageName: newPage });\n  };\n\n  const onChangeFilters = (newFilters) => {\n    setState({ ...state, filters: newFilters });\n  };\n\n  const onChangeSort = (newSort) => {\n    setState({ ...state, sort: newSort });\n  };\n\n  const onChangeSearch = (newSearch) => {\n    setState({ ...state, search: newSearch });\n  }\n\n  return (\n    <div className=\"App\">\n      <Menu\n        pageName={pageName}\n        onUpdatePage={onUpdatePage}\n        onChangeFilters={onChangeFilters}\n        onChangeSearch={onChangeSearch}\n        onChangeSort={onChangeSort}\n        sort={sort}\n        filters={filters}\n      />\n      {state.page}\n      <CssBaseline />\n      {pageName === 'Fish' && (\n        <Creatures type=\"fish\" filters={filters} search={search} sort={sort} />\n      )}\n      {pageName === 'Bugs' && (\n        <Creatures type=\"bugs\" filters={filters} search={search} sort={sort} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}